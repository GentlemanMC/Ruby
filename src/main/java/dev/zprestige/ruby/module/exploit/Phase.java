package dev.zprestige.ruby.module.exploit;

import dev.zprestige.ruby.eventbus.annotation.RegisterListener;
import dev.zprestige.ruby.events.MoveEvent;
import dev.zprestige.ruby.events.PacketEvent;
import dev.zprestige.ruby.module.Module;
import dev.zprestige.ruby.settings.impl.ColorBox;
import dev.zprestige.ruby.settings.impl.Slider;
import dev.zprestige.ruby.settings.impl.Switch;
import dev.zprestige.ruby.util.BlockUtil;
import dev.zprestige.ruby.util.EntityUtil;
import dev.zprestige.ruby.util.RenderUtil;
import net.minecraft.init.Blocks;
import net.minecraft.network.play.server.SPacketPlayerPosLook;
import net.minecraft.util.math.BlockPos;

public class Phase extends Module {
    public final Slider horizontalFactor = Menu.Slider("Horizontal Factor", 0.1f, 50.0f);
    public final Slider downFactor = Menu.Slider("Down Factor", 0.1f, 10.0f);
    public final Switch packetLimiter = Menu.Switch("Packet Limiter");
    public final Slider packetLimit = Menu.Slider("Packet Limit", 0, 20);
    public final Slider packetLimitRestartValue = Menu.Slider("Packet Limit Restart Value", 0, 5);
    public final Switch showGaps = Menu.Switch("Show Gaps");
    public final ColorBox gapColor = Menu.Color("Gap Color");
    public int rubberbandPackets = 0;

    @RegisterListener
    public void onMove(MoveEvent event) {
        if (nullCheck() || !isEnabled())
            return;
        mc.player.noClip = true;
        if (packetLimiter.GetSwitch() && rubberbandPackets >= packetLimit.GetSlider()) {
            event.setMotion(0, 0, 0);
            rubberbandPackets = (rubberbandPackets >= packetLimit.GetSlider() + packetLimitRestartValue.GetSlider()) ? 0 : rubberbandPackets + 1;
            return;
        }
        double[] motion = EntityUtil.getSpeed(horizontalFactor.GetSlider() / 100.0);
        event.setMotion(motion[0], mc.gameSettings.keyBindSneak.isKeyDown() ? -downFactor.GetSlider() / 100.0 : 0.0, motion[1]);
    }

    @RegisterListener
    public void onPacketReceive(PacketEvent.PacketReceiveEvent event) {
        if (nullCheck() || !isEnabled() || !(event.getPacket() instanceof SPacketPlayerPosLook) || !packetLimiter.GetSwitch())
            return;
        rubberbandPackets++;
    }

    @Override
    public void onFrame(float partialTicks) {
        if (!showGaps.GetSwitch())
            return;
        BlockPos pos = BlockUtil.getPlayerPos();
        if (mc.world.getBlockState(pos.down()).getBlock().equals(Blocks.AIR))
            RenderUtil.drawFullBox(true, true, gapColor.GetColor(), gapColor.GetColor(), 1, pos.down());
    }
}
