package dev.zprestige.ruby.module.exploit;

import dev.zprestige.ruby.module.Module;
import dev.zprestige.ruby.util.EntityUtil;
import dev.zprestige.ruby.util.RenderUtil;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.math.AxisAlignedBB;
import net.minecraft.util.math.BlockPos;

import java.awt.*;
import java.util.Objects;

public class McPvp extends Module {
    BlockPos pos1 = null;
    @Override
    public void onTick(){
        EntityPlayer entityPlayer = EntityUtil.getTarget(50.0f);
        if (entityPlayer == null) {
            return;
        }
        int i = (int) Math.floor(Math.random() * 3);
        BlockPos pos = EntityUtil.getPlayerPos(entityPlayer);
        pos1 = null;
        switch (i){
            case 1:
                Objects.requireNonNull(mc.getConnection()).sendPacket(new CPacketPlayer.Position(pos.getX() + 3, pos.getY(), pos.getZ(),true));
                pos1 = new BlockPos(pos.getX() + 3, pos.getY(), pos.getZ());
                break;
            case 2:
                Objects.requireNonNull(mc.getConnection()).sendPacket(new CPacketPlayer.Position(pos.getX() - 3, pos.getY(), pos.getZ(), true));
                pos1 = new BlockPos(pos.getX() - 3, pos.getY(), pos.getZ());
                break;
            case 3:
                Objects.requireNonNull(mc.getConnection()).sendPacket(new CPacketPlayer.Position(pos.getX(), pos.getY(), pos.getZ() + 3, true));
                pos1 = new BlockPos(pos.getX(), pos.getY(), pos.getZ() + 3);
                break;
            case 4:
                Objects.requireNonNull(mc.getConnection()).sendPacket(new CPacketPlayer.Position(pos.getX(), pos.getY(), pos.getZ() - 3, true));
                pos1 = new BlockPos(pos.getX(), pos.getY(), pos.getZ() - 3);
                break;
        }
    }

    @Override
    public void onGlobalRenderTick(){
        if (pos1 == null)
            return;
        AxisAlignedBB bb = new AxisAlignedBB(pos1).shrink(0.2);
        RenderUtil.drawBBBoxWithHeight(bb, new Color(0x88E28AFF), 100, 2);
        RenderUtil.drawBlockOutlineBBWithHeight(bb, new Color(0x88E28AFF), 1.0f, 2);
    }
}
