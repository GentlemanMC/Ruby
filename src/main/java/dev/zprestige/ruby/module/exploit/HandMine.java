package dev.zprestige.ruby.module.exploit;

import dev.zprestige.ruby.eventbus.annotation.RegisterListener;
import dev.zprestige.ruby.events.BlockInteractEvent;
import dev.zprestige.ruby.module.Module;
import dev.zprestige.ruby.setting.impl.BooleanSetting;
import dev.zprestige.ruby.util.InventoryUtil;
import net.minecraft.init.Items;
import net.minecraft.network.play.client.CPacketPlayerDigging;
import net.minecraft.util.math.RayTraceResult;

import java.util.Objects;

public class HandMine extends Module {
    public final Switch silent = Menu.Switch("Silent");
    public boolean switched = false;
    int currentItem = -1;

    @Override
    public void onTick() {
        if (silent.getValue())
            return;
        RayTraceResult rayTraceResult = mc.objectMouseOver;
        int slot = InventoryUtil.getItemFromHotbar(Items.DIAMOND_PICKAXE);
        if (switched && (mc.gameSettings.keyBindAttack.isKeyDown() || rayTraceResult == null || rayTraceResult.typeOfHit.equals(RayTraceResult.Type.BLOCK))) {
            mc.player.inventory.currentItem = currentItem;
            mc.playerController.updateController();
            switched = false;
        }
        if (mc.gameSettings.keyBindAttack.isKeyDown() && rayTraceResult != null && rayTraceResult.typeOfHit.equals(RayTraceResult.Type.BLOCK) && slot != -1) {
            currentItem = mc.player.inventory.currentItem;
            InventoryUtil.switchToSlot(slot);
            switched = true;
        }
    }

    @RegisterListener
    public void onBlockEvent(BlockInteractEvent.ClickBlock event) {
        if (nullCheck() || !isEnabled() || !silent.getValue())
            return;
        if (mc.playerController.curBlockDamageMP > 0.1f)
            mc.playerController.isHittingBlock = true;
        int slot = InventoryUtil.getItemFromHotbar(Items.DIAMOND_PICKAXE);
        if (!mc.player.getHeldItemMainhand().getItem().equals(Items.DIAMOND_PICKAXE) && slot != -1) {
            int currentItem = mc.player.inventory.currentItem;
            InventoryUtil.switchToSlot(slot);
            Objects.requireNonNull(mc.getConnection()).sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.STOP_DESTROY_BLOCK, event.pos, event.facing));
            mc.player.inventory.currentItem = currentItem;
            mc.playerController.updateController();
        }
    }
}
