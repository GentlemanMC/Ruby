buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

String characters = "ABCDEFGHILMNOPQRSTUVWXYZabcdefghilmnopqrstuvwxyz0123456789"
String randomString = ""

Random rand = new Random()
char[] text = new char[15]
for (int i = 0; i < 15; i++){
    text[i] = characters.charAt(rand.nextInt(characters.length()))
}

for (int i = 0; i < 15; i++){
    randomString += text[i]
}

File libs = file buildDir.getAbsolutePath() + '/libs/'
if (libs.exists() && libs.isDirectory()) {
    for (File file in libs.listFiles()) {
        file.delete()
    }
}
version "0.2-" + randomString
group "dev.zprestige.ruby"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpVersion
    coreMod = 'dev.zprestige.api.mixins.loader.MixinLoader-'
    makeObfSourceJar = false
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/maven/'
    }
}

dependencies {
    compile group: "com.googlecode.json-simple", name: "json-simple", version: "1.1.1"
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}


task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = 'main'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.ruby.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}

jar.manifest.attributes(
        'MixinConfigs': 'mixins.ruby.json',
        'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
        'TweakOrder': 0,
        'FMLCorePluginContainsFMLMod': 'true',
        'FMLCorePlugin': 'dev.zprestige.api.mixins.loader.MixinLoader',
        'ForceLoadAsMod': 'true',
        'FMLAT': 'ruby_at.cfg'
)
build.dependsOn(shadowJar)
